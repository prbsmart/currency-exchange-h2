buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.test.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'com.okta.spring:okta-spring-boot-starter:1.4.0'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	//implementation 'org.springframework.cloud:spring-cloud-function-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	//implementation 'org.springframework.cloud:spring-cloud-starter-aws'
	//implementation 'org.springframework.cloud:spring-cloud-starter-aws-jdbc'
	//implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.oracle.ojdbc:ojdbc8'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

apply plugin: 'com.bmuschko.docker-remote-api'
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

docker {
	if (System.env.containsKey('DOCKER_HOST') && System.env.containsKey('DOCKER_CERT_PATH')) {
		url = System.env.DOCKER_HOST.replace("tcp", "https")
		certPath = new File(System.env.DOCKER_CERT_PATH)
	}
}
task buildImage(type: DockerBuildImage) {
	dependsOn assemble
	inputDir = project.rootDir
	tag = "prbsmart/currency-exchange:${project.version}"
}

//docker build --build-arg JAR_FILE=build/libs/*.jar -t prbsmart/currency-exchange .